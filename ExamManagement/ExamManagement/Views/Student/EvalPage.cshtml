@model ExamManagement.Models.QuestionModel

@{
    ViewBag.Title = "EvalPage";
    Layout = "~/Views/Shared/StudentLayout.cshtml";
}
@{
    var totalQuestion = Model.TotalQuestionInset;
    var endTime = (DateTime)ViewBag.TimeExpire;
    var timeRemaining=TimeSpan.FromTicks(endTime.Ticks - DateTime.UtcNow.Ticks).TotalSeconds.ToString("#");
}

@*@Model.QuestionNumber*@
@*<div class="col-md-12">
        <div class="Question-number">Question:@Model.QuestionNumber</div>
        <div>Time Remaining:<span id="minRemaining"></span>:<span id="secRemaining"></span></div>
    </div>*@

<!-- inner banner -->
    <div class="inner-banner-w3ls py-5" id="home">
        <div class="container py-xl-5 py-lg-3">
            <!-- register  -->
            <div class="modal-body mt-md-2 mt-5">

                <h3 class="title-w3 mb-5 text-center text-wh font-weight-bold">Test</h3>

                <div class="row">
    <div class="col-md-12" style="color:white;font-size:large;">
        <div class="Question-number">Question:@Model.QuestionNumber</div>
        <div>Time Remaining:<span id="minRemaining"></span>:<span id="secRemaining"></span></div>
    </div>
</div>
@using(Html.BeginForm("PostAnswer","Student",FormMethod.Post,new{@id="form"})){
    
    <input type="hidden" id="Direction" name="Direction" value="forward" />@*
    @Html.Hidden("Direction", "forward");
    
    *@<input type="hidden" name="Token" value="@(Session["Token"])" />
     <input type="hidden" name="TestId" value="@(Model.TestId)" />
    <input type="hidden" name="QuestionId" value="@(Model.QuestionNumber)" />


<div class="row">
     <div class="col-md-12">
<table>
    <tr>
       @* <td><a href="javascript:void(0);" class="btn btn-primary" onclick="saveBackward();">|<< Save & Previous</a></td>*@
        <td><a href="@Url.Action("EvalPage",new{@token=Session["Token"],@tid=Session["TestId"],@qno=(Model.QuestionNumber>1 ? Model.QuestionNumber - 1:1)})" class="btn btn-default">|<< Previous</a></td>
        @for (int i = 0; i < totalQuestion; i++)
        {
            <td><a href="@Url.Action("EvalPage",new{@token=Session["Token"],@tid=Session["TestId"],@qno=(i+1)})"class="btn @(Model.QuestionNumber==(i+1)? "btn-primary": "btn-default")">@(i+1)</a></td>
        }
        
        <td><a href="@Url.Action("EvalPage",new{@token=Session["Token"],@tid=Session["TestId"],@qno=(Model.QuestionNumber<(totalQuestion - 1)? Model.QuestionNumber+1 :totalQuestion)})"class="btn btn-default">Next >>|</a></td>
         <td><a href="javascript:void(0);" class="btn btn-primary" onclick="saveBackward();"> Save & Next >>|</a></td>  
            </tr> 
</table>
            </div>
            </div>
            <div class="row" style="color:white;font-size:large;">
                <div class="col-md-10">
                <p style="font-size:25px;">
                    <br />
                    @Html.Raw(Model.Question ??"")
                </p>
                @switch (Model.QuestionType)
              {
                  case "RADIO":
                      <div class="prelude"> Choose the correct answer</div>
              <ul class="js_choices">
      @for (int i = 0; i < Model.Options.Count; i++)
                {
          <li>
              <input type="hidden" name="UserChoices[@i].ChoiceId" value="@Model.Options[i].ChoiceId" />
              <input type="radio" name="UserChoices[@i].IsChecked"@(!string.IsNullOrEmpty(Model.Options[i].Answer)?"CHECKED":"") />
                  <span class="code">@Html.Raw(Model.Options[i].Label.Replace("[","&lt;").Replace("]","&gt;"))</span> 

          </li>
                   
                }
              </ul>
              
          <input type="hidden" name="Answer" value="nodata" />
              
                
              
              break;
              case "Multiple":
               <div class="prelude"> Choose the correct answer</div>
                <ul class="js_choices">
      @for (int i = 0; i < Model.Options.Count; i++)
                {
          <li>
              <input type="hidden" name="UserChoices[@i].ChoiceId" value="@Model.Options[i].ChoiceId" />
              <input type="Checkbox" name="UserChoices[@i].IsChecked"@(!string.IsNullOrEmpty(Model.Options[i].Answer)?"CHECKED":"") />
                  <span class="code">@Html.Raw(Model.Options[i].Label.Replace("[","&lt;").Replace("]","&gt;"))</span>       </li>
                   
                }
              </ul>
               <input type="hidden" name="Answer" />
                    
               break;
              case "Text":
               <div> Write your thoughts</div>
              <div>
                  <p>
                 <input type="hidden" name="UserChoices[0].ChoiceId" value="@Model.Options[0].ChoiceId" />
                      <textarea name="Answer" class="form-control">@(Model.Options[0].Answer)</textarea>
                  </p>
              </div>
              break;
              }
                 </div>
                </div>
}
         </div>
           </div>
        </div> 
 
<script>

    var remSeconds= @timeRemaining;
    var secondsCounter=remSeconds % 60;
    function formatNumber(number){

        if (number<10) return '0' + number;
        else return ''+number;
    }
    function startTick(){
        document.getElementById("secRemaining").innerText =formatNumber(secondsCounter);
        document.getElementById("minRemaining").innerText = formatNumber(parseInt(remSeconds/60));

        var _tick=setInterval(function(){
            if(remSeconds >0)
            {

                remSeconds=remSeconds-1;
                secondsCounter=secondsCounter-1;
                document.getElementById("secRemaining").innerText=formatNumber(SecondsCounter);
                document.getElementById("minRemaining").innerText = formatNumber(parseInt(remSeconds/60));
                if(secondsCounter==0)
                    secondsCounter=60;
            }
            else{
                alert("your time has expired");
                clearInterval(_tick);
            }

        },1000);
    }
    startTick();
    function saveForward(sender){
        $('#direction').val(forward);
        document.getElementById('form').submit();
        alert("hai1");
}
    function saveBackward(sender){
      
        //$('#Direction').val('backward');
      
document.getElementById('form').submit();


    } 
  
</script>
